{"ast":null,"code":"import { __assign as o, __spreadArray as r } from \"../../../node_modules/tslib/tslib.es6.js\";\nimport { getActorState as e, getActorContext as n } from \"../actor.js\";\nimport { getPrimaryAlias as t } from \"../context.js\";\nimport { defaultFormFieldOptions as s } from \"../constants.js\";\nimport { isAuthFieldWithDefaults as a } from \"../form.js\";\nimport \"aws-amplify\";\nimport \"lodash/cloneDeep\";\nimport \"../../../i18n/translations.js\";\n\nvar i = function i(r, e) {\n  var t = n(r).country_code,\n      a = s[e];\n  return \"tel\" === a.type && (a = o(o({}, a), {\n    dialCode: t\n  })), a;\n},\n    c = function c(r) {\n  var e = t(r);\n  return o(o({}, i(r, e)), {\n    autocomplete: \"username\"\n  });\n},\n    d = function d(r) {\n  return {\n    confirmation_code: o(o({}, i(r, \"confirmation_code\")), {\n      label: \"Code *\",\n      placeholder: \"Code\"\n    })\n  };\n},\n    m = {\n  signIn: function signIn(r) {\n    return {\n      username: o({}, c(r)),\n      password: o(o({}, i(r, \"password\")), {\n        autocomplete: \"current-password\"\n      })\n    };\n  },\n  signUp: function signUp(e) {\n    for (var n = e.context.config, s = n.loginMechanisms, d = n.signUpAttributes, m = t(e), l = {}, u = 0, f = Array.from(new Set(r(r(r([], s, !0), [\"password\", \"confirm_password\"], !1), d, !0))); u < f.length; u++) {\n      var p = f[u];\n\n      if (a(p)) {\n        var w = p === m ? c(e) : i(e, p);\n        l[p] = o({}, w);\n      } else console.debug(\"Authenticator does not have a default implementation for \".concat(p, \". Customize SignUp FormFields to add your own.\"));\n    }\n\n    return l;\n  },\n  confirmSignUp: function confirmSignUp(r) {\n    return {\n      confirmation_code: o(o({}, i(r, \"confirmation_code\")), {\n        placeholder: \"Enter your code\"\n      })\n    };\n  },\n  confirmSignIn: d,\n  forceNewPassword: function forceNewPassword(n) {\n    for (var t = e(n).context.requiredAttributes, s = {}, c = 0, d = Array.from(new Set(r([\"password\", \"confirm_password\"], t, !0))); c < d.length; c++) {\n      var m = d[c];\n      a(m) ? s[m] = o({}, i(n, m)) : console.debug(\"Authenticator does not have a default implementation for \".concat(m, \". Customize ForceNewPassword FormFields to add your own.\"));\n    }\n\n    return s;\n  },\n  resetPassword: function resetPassword(r) {\n    var e = t(r),\n        n = s[e].label;\n    return {\n      username: o(o({}, c(r)), {\n        label: \"Enter your \".concat(n.toLowerCase()),\n        placeholder: \"Enter your \".concat(n.toLowerCase())\n      })\n    };\n  },\n  confirmResetPassword: function confirmResetPassword(r) {\n    return o(o({}, d(r)), {\n      password: o(o({}, i(r, \"password\")), {\n        label: \"New Password\",\n        placeholder: \"New Password\"\n      }),\n      confirm_password: o(o({}, i(r, \"confirm_password\")), {\n        label: \"Confirm Password\",\n        placeholder: \"Confirm Password\"\n      })\n    });\n  },\n  confirmVerifyUser: d,\n  setupTOTP: d\n};\n\nexport { m as defaultFormFieldsGetters };","map":null,"metadata":{},"sourceType":"module"}