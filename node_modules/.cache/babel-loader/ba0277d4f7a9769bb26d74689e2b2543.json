{"ast":null,"code":"export function observeElementRect(n, o) {\n  var i = e.get(n);\n  return void 0 === i ? (e.set(n, {\n    rect: {},\n    callbacks: [o]\n  }), 1 === e.size && (t = requestAnimationFrame(c))) : (i.callbacks.push(o), o(n.getBoundingClientRect())), function () {\n    var c = e.get(n);\n    if (void 0 === c) return;\n    var i = c.callbacks.indexOf(o);\n    i > -1 && c.callbacks.splice(i, 1), 0 === c.callbacks.length && (e.delete(n), 0 === e.size && cancelAnimationFrame(t));\n  };\n}\nvar t;\nvar e = new Map();\n\nfunction c() {\n  var n = [];\n  e.forEach(function (t, e) {\n    var c = e.getBoundingClientRect();\n    var o, i;\n    o = t.rect, i = c, (o.width !== i.width || o.height !== i.height || o.top !== i.top || o.right !== i.right || o.bottom !== i.bottom || o.left !== i.left) && (t.rect = c, n.push(t));\n  }), n.forEach(function (t) {\n    t.callbacks.forEach(function (e) {\n      return e(t.rect);\n    });\n  }), t = requestAnimationFrame(c);\n}","map":null,"metadata":{},"sourceType":"module"}