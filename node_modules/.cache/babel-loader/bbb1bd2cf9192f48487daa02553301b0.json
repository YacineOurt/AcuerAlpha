{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsx as a } from \"react/jsx-runtime\";\nimport * as s from \"react\";\nimport { Root as l } from \"@radix-ui/react-accordion\";\nimport t from \"classnames\";\nimport { ComponentClassNames as r } from \"../shared/constants.js\";\nimport { splitPrimitiveProps as o } from \"../shared/styleUtils.js\";\nvar n = s.forwardRef(function (s, n) {\n  var i = s.children,\n      d = s.className,\n      m = s.defaultValue,\n      u = s.isCollapsible,\n      c = s.onChange,\n      p = s.onValueChange,\n      f = s.testId,\n      _s$type = s.type,\n      h = _s$type === void 0 ? \"single\" : _s$type,\n      g = s.value,\n      C = e(s, [\"children\", \"className\", \"defaultValue\", \"isCollapsible\", \"onChange\", \"onValueChange\", \"testId\", \"type\", \"value\"]);\n\n  var _o = o(C),\n      V = _o.rest;\n\n  return a(l, \"multiple\" === h ? Object.assign({\n    className: t(r.Expander, d),\n    \"data-testid\": f,\n    defaultValue: m,\n    onValueChange: c,\n    ref: n,\n    type: h,\n    value: g\n  }, V, {\n    children: i\n  }) : Object.assign({\n    className: t(r.Expander, d),\n    collapsible: u,\n    \"data-testid\": f,\n    defaultValue: m,\n    onValueChange: c,\n    ref: n,\n    type: h,\n    value: g\n  }, V, {\n    children: i\n  }));\n});\nn.displayName = \"Expander\";\nexport { n as Expander };","map":null,"metadata":{},"sourceType":"module"}