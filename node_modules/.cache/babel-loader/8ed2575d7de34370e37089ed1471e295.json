{"ast":null,"code":"import _slicedToArray from \"/home/yacine/Pro/alpha/AcuerApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as e from \"react\";\nimport { isFunction as a } from \"../shared/utils.js\";\n\nvar t = function t(e, a, _t, l) {\n  var s = (l - e) % _t;\n  return l = l - s + Math.round(s / _t) * _t, (l = Math.max(e, l)) > a && (l = a - (a - e) % _t), l;\n},\n    l = function l(_ref) {\n  var _ref$defaultValue = _ref.defaultValue,\n      l = _ref$defaultValue === void 0 ? 0 : _ref$defaultValue,\n      s = _ref.value,\n      _ref$step = _ref.step,\n      n = _ref$step === void 0 ? 1 : _ref$step,\n      _ref$max = _ref.max,\n      u = _ref$max === void 0 ? Number.MAX_SAFE_INTEGER : _ref$max,\n      _ref$min = _ref.min,\n      r = _ref$min === void 0 ? Number.MIN_SAFE_INTEGER : _ref$min,\n      o = _ref.isDisabled,\n      c = _ref.isReadOnly,\n      h = _ref.onDecrease,\n      d = _ref.onIncrease,\n      i = _ref.onStepChange;\n  var b = void 0 !== s;\n  u = Math.max(r, u);\n\n  var _e$useState = e.useState(function () {\n    return t(r, u, n, l);\n  }),\n      _e$useState2 = _slicedToArray(_e$useState, 2),\n      m = _e$useState2[0],\n      p = _e$useState2[1];\n\n  b && (s = t(r, u, n, s));\n\n  var C = b ? s : m,\n      I = o || c || C + n > u,\n      N = o || c || C - n < r,\n      _e$useState3 = e.useState(C),\n      _e$useState4 = _slicedToArray(_e$useState3, 2),\n      D = _e$useState4[0],\n      E = _e$useState4[1],\n      g = e.useCallback(function (e) {\n    E(e.target.value);\n  }, []),\n      k = e.useCallback(function (e) {\n    var l = parseFloat(e.target.value);\n    isNaN(l) || (l = t(r, u, n, l), b || p(l), a(i) && i(l), E(l));\n  }, [r, u, n, b, i]),\n      v = e.useCallback(function () {\n    b || p(C + n), a(i) && i(C + n), a(d) && d(), E(C + n);\n  }, [n, C, b, d, i]),\n      M = e.useCallback(function () {\n    b || p(C - n), a(i) && i(C - n), a(h) && h(), E(C - n);\n  }, [n, C, b, h, i]),\n      S = e.useCallback(function (e) {\n    e.currentTarget.blur();\n  }, []);\n\n  return {\n    step: n,\n    value: C,\n    inputValue: D,\n    handleDecrease: M,\n    handleIncrease: v,\n    handleOnBlur: k,\n    handleOnChange: g,\n    handleOnWheel: S,\n    setInputValue: E,\n    shouldDisableDecreaseButton: N,\n    shouldDisableIncreaseButton: I\n  };\n};\n\nexport { l as useStepper };","map":null,"metadata":{},"sourceType":"module"}