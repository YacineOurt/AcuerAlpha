{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nvar HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n  var _a$showMarkerPopup = _a.showMarkerPopup,\n      showMarkerPopup = _a$showMarkerPopup === void 0 ? false : _a$showMarkerPopup,\n      options = __rest(_a, [\"showMarkerPopup\"]);\n\n  var unclusteredLayerId = \"\".concat(sourceName, \"-layer-unclustered-point\");\n  var selectedId = null;\n\n  function deselectPoint() {\n    if (selectedId !== null) {\n      map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n      selectedId = null;\n    }\n  }\n\n  var popupRender = options.popupRender ? options.popupRender : getPopupRenderFunction(unclusteredLayerId, options);\n  addUnclusteredMarkerImages(map, options);\n  var defaultUnclusteredPoint = {\n    id: unclusteredLayerId,\n    type: \"symbol\",\n    source: sourceName,\n    filter: [\"!\", [\"has\", \"point_count\"]],\n    layout: {\n      \"icon-image\": \"inactive-marker\"\n    }\n  };\n  map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n  /*\n   * Add css to header to hide default popup tip\n   */\n\n  if (showMarkerPopup) {\n    var element = document.getElementById(HIDE_TIP);\n\n    if (!element) {\n      var style = document.createElement(\"style\");\n      style.setAttribute(\"id\", HIDE_TIP);\n      document.head.append(style);\n      style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n    }\n  }\n\n  map.on(\"click\", function () {\n    deselectPoint();\n  });\n  /*\n   * Set active state on markers when clicked\n   */\n\n  map.on(\"click\", unclusteredLayerId, function (e) {\n    if (typeof options.onClick === \"function\") options.onClick(e);\n    selectedId = e.features[0].id;\n    map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\"match\", [\"id\"], selectedId, \"active-marker\", \"inactive-marker\" // default\n    ]); // If popup option is set show a popup on click\n\n    if (showMarkerPopup) {\n      var selectedFeature = e.features[0];\n      var coordinates = selectedFeature.geometry.coordinates;\n\n      if (isCoordinates(coordinates)) {\n        var popup = new Popup().setLngLat(coordinates).setHTML(popupRender(selectedFeature)).setOffset(15).addTo(map);\n        popup.on(\"close\", function () {\n          if (selectedId === selectedFeature.id) deselectPoint();\n        });\n      }\n    }\n  });\n  /*\n   * Set cursor style to pointer when mousing over point layer\n   */\n\n  map.on(\"mouseover\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  /*\n   * Reset cursor style when the point layer\n   */\n\n  map.on(\"mouseleave\", unclusteredLayerId, function () {\n    map.getCanvas().style.cursor = \"\";\n  });\n  return {\n    unclusteredLayerId: unclusteredLayerId\n  };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\n\nfunction addUnclusteredMarkerImages(map, _ref) {\n  var _ref$selectedColor = _ref.selectedColor,\n      selectedColor = _ref$selectedColor === void 0 ? ACTIVE_MARKER_COLOR : _ref$selectedColor,\n      _ref$selectedBorderCo = _ref.selectedBorderColor,\n      selectedBorderColor = _ref$selectedBorderCo === void 0 ? COLOR_WHITE : _ref$selectedBorderCo,\n      _ref$selectedBorderWi = _ref.selectedBorderWidth,\n      selectedBorderWidth = _ref$selectedBorderWi === void 0 ? 4 : _ref$selectedBorderWi,\n      _ref$defaultBorderCol = _ref.defaultBorderColor,\n      defaultBorderColor = _ref$defaultBorderCol === void 0 ? COLOR_WHITE : _ref$defaultBorderCol,\n      _ref$defaultBorderWid = _ref.defaultBorderWidth,\n      defaultBorderWidth = _ref$defaultBorderWid === void 0 ? 4 : _ref$defaultBorderWid,\n      _ref$defaultColor = _ref.defaultColor,\n      fillColor = _ref$defaultColor === void 0 ? MARKER_COLOR : _ref$defaultColor,\n      markerImageElement = _ref.markerImageElement,\n      activeMarkerImageElement = _ref.activeMarkerImageElement;\n  var inactiveMarker = markerImageElement || createMarker({\n    fillColor: fillColor,\n    strokeColor: defaultBorderColor,\n    lineWidth: defaultBorderWidth\n  });\n  var activeMarker = activeMarkerImageElement || markerImageElement || createMarker({\n    fillColor: selectedColor,\n    strokeColor: selectedBorderColor,\n    lineWidth: selectedBorderWidth\n  });\n  map.addImage(\"inactive-marker\", inactiveMarker, {\n    pixelRatio: 2\n  });\n  map.addImage(\"active-marker\", activeMarker, {\n    pixelRatio: 2\n  });\n}","map":null,"metadata":{},"sourceType":"module"}