{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as a, jsx as r } from \"react/jsx-runtime\";\nimport s from \"classnames\";\nimport { Root as t, List as n, Content as i, Trigger as l } from \"@radix-ui/react-tabs\";\nimport * as o from \"react\";\nimport { ComponentClassNames as c } from \"../shared/constants.js\";\nimport { Flex as m } from \"../Flex/Flex.js\";\nimport { View as d } from \"../View/View.js\";\n\nvar p = function p(e) {\n  return null !== e && \"object\" == typeof e && e.hasOwnProperty(\"props\") && null != e.props.title;\n},\n    f = o.forwardRef(function (l, d) {\n  var f = l.ariaLabel,\n      u = l.children,\n      b = l.className,\n      _l$defaultIndex = l.defaultIndex,\n      h = _l$defaultIndex === void 0 ? 0 : _l$defaultIndex,\n      g = l.currentIndex,\n      j = l.onChange,\n      x = l.indicatorPosition,\n      y = l.spacing,\n      I = e(l, [\"ariaLabel\", \"children\", \"className\", \"defaultIndex\", \"currentIndex\", \"onChange\", \"indicatorPosition\", \"spacing\"]);\n  var N = o.Children.map(u, function (e) {\n    return null === e || \"string\" == typeof e && /\\s/.test(e) ? {} : p(e) ? e.props : (console.warn(\"Amplify UI: <Tabs> component only accepts <TabItem> as children.\"), {});\n  }),\n      v = {\n    defaultValue: h.toString(),\n    value: null != g ? g.toString() : void 0,\n    onValueChange: j\n  };\n  return a(t, Object.assign({}, v, {\n    children: [r(n, Object.assign({\n      \"aria-label\": f\n    }, {\n      children: r(m, Object.assign({\n        className: s(c.Tabs, b),\n        \"data-indicator-position\": x,\n        ref: d\n      }, I, {\n        children: o.Children.map(u, function (e, a) {\n          return p(e) ? o.cloneElement(e, {\n            \"data-spacing\": y,\n            key: a,\n            value: \"\".concat(a)\n          }) : null;\n        })\n      }))\n    })), N.map(function (e, a) {\n      return r(i, Object.assign({\n        value: \"\".concat(a)\n      }, {\n        children: e.children\n      }), a);\n    })]\n  }));\n}),\n    u = o.forwardRef(function (a, t) {\n  var n = a.className,\n      i = a.title,\n      o = e(a, [\"className\", \"title\"]);\n  return r(d, Object.assign({\n    as: l,\n    className: s(c.TabItems, n),\n    ref: t\n  }, o, {\n    children: i\n  }));\n});\n\nf.displayName = \"Tabs\", u.displayName = \"TabItem\";\nexport { u as TabItem, f as Tabs };","map":null,"metadata":{},"sourceType":"module"}