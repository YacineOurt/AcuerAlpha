{"ast":null,"code":"import _defineProperty from \"/home/yacine/Pro/alpha/AcuerApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as s, jsx as a } from \"react/jsx-runtime\";\nimport * as o from \"react\";\nimport t from \"classnames\";\nimport { classNameModifierByFlag as d } from \"../shared/utils.js\";\nimport { ComponentClassNames as c } from \"../shared/constants.js\";\nimport { Flex as i } from \"../Flex/Flex.js\";\nimport \"../View/View.js\";\nimport { IconCheck as r } from \"../Icon/icons/IconCheck.js\";\nimport { Input as l } from \"../Input/Input.js\";\nimport { splitPrimitiveProps as n } from \"../shared/styleUtils.js\";\nimport { Text as b } from \"../Text/Text.js\";\nimport { useCheckbox as h } from \"./useCheckbox.js\";\nimport { VisuallyHidden as m } from \"../VisuallyHidden/VisuallyHidden.js\";\nimport { getTestId as k } from \"../utils/testUtils.js\";\nvar u = o.forwardRef(function (u, C) {\n  var p = u.checked,\n      f = u.className,\n      x = u.defaultChecked,\n      j = u.hasError,\n      I = u.isDisabled,\n      g = u.label,\n      y = u.labelHidden,\n      N = u.labelPosition,\n      B = u.onChange,\n      F = u.size,\n      H = u.testId,\n      V = e(u, [\"checked\", \"className\", \"defaultChecked\", \"hasError\", \"isDisabled\", \"label\", \"labelHidden\", \"labelPosition\", \"onChange\", \"size\", \"testId\"]);\n\n  var _n = n(V),\n      D = _n.baseStyleProps,\n      O = _n.flexContainerStyleProps,\n      P = _n.rest,\n      v = void 0 !== p ? p : x,\n      _h = h(v, B),\n      w = _h.dataChecked,\n      z = _h.dataFocus,\n      E = _h.onBlur,\n      L = _h.onChange,\n      S = _h.onFocus,\n      T = _h.setDataChecked;\n\n  o.useEffect(function () {\n    void 0 !== p && p !== w && T(p);\n  }, [p, w, T]);\n\n  var U = k(H, c.CheckboxButton),\n      R = k(H, c.CheckboxIcon),\n      _ = k(H, c.CheckboxLabel),\n      q = t(c.CheckboxButton, d(c.CheckboxButton, \"disabled\", I), d(c.CheckboxButton, \"error\", j), d(c.CheckboxButton, \"focused\", z)),\n      A = t(c.CheckboxIcon, d(c.CheckboxIcon, \"checked\", w), d(c.CheckboxIcon, \"disabled\", I));\n\n  return s(i, Object.assign({\n    as: \"label\",\n    className: t(c.Checkbox, d(c.Checkbox, \"disabled\", I), f),\n    \"data-disabled\": I,\n    \"data-label-position\": N,\n    testId: H\n  }, D, O, {\n    children: [a(m, {\n      children: a(l, Object.assign({\n        checked: p,\n        className: c.CheckboxInput,\n        defaultChecked: x,\n        isDisabled: I,\n        onBlur: E,\n        onChange: L,\n        onFocus: S,\n        ref: C,\n        type: \"checkbox\"\n      }, P))\n    }), g && a(b, Object.assign({\n      as: \"span\",\n      className: t(c.CheckboxLabel, _defineProperty({}, c.VisuallyHidden, y)),\n      \"data-disabled\": I,\n      testId: _\n    }, {\n      children: g\n    })), a(i, Object.assign({\n      \"aria-hidden\": \"true\",\n      as: \"span\",\n      className: q,\n      \"data-checked\": w,\n      \"data-disabled\": I,\n      \"data-focus\": z,\n      \"data-error\": j,\n      testId: U\n    }, {\n      children: a(r, {\n        className: A,\n        \"data-checked\": w,\n        \"data-disabled\": I,\n        \"data-testid\": R,\n        size: F\n      })\n    }))]\n  }));\n});\nu.displayName = \"Checkbox\";\nexport { u as Checkbox };","map":null,"metadata":{},"sourceType":"module"}