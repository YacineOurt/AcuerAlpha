{"ast":null,"code":"import { __assign as n } from \"../node_modules/tslib/tslib.es6.js\";\nimport t from \"style-dictionary/lib/utils/deepExtend\";\nimport o from \"style-dictionary/lib/utils/flattenProperties\";\nimport { defaultTheme as e } from \"./defaultTheme.js\";\nimport { cssValue as a, cssNameTransform as c } from \"./utils.js\";\n\nfunction r(n, t) {\n  void 0 === t && (t = []);\n  var o = {};\n  if (n.hasOwnProperty(\"value\")) return function (n, t) {\n    var o = \"--\".concat(c({\n      path: t\n    })),\n        e = n.value;\n    return {\n      name: o,\n      path: t,\n      value: a(n),\n      original: e,\n      toString: function toString() {\n        return \"var(\".concat(o, \")\");\n      }\n    };\n  }(n, t);\n  if (\"object\" == typeof n) for (var e in n) {\n    n.hasOwnProperty(e) && (\"object\" != typeof n[e] ? (console.warn(\"Non-design token found when creating the theme at path: \".concat(t.join(\".\"), \".\").concat(e, \"\\nDid you forget to add '{value:\\\"\").concat(n[e], \"\\\"}'?\")), o[e] = n[e]) : o[e] = r(n[e], t.concat(e)));\n  }\n  return o;\n}\n\nfunction i(a, c) {\n  void 0 === c && (c = e);\n  var i = t([{}, c, a]),\n      m = r(i.tokens),\n      l = i.breakpoints,\n      s = i.name,\n      d = '[data-amplify-theme=\"'.concat(s, '\"] {\\n') + o(m).map(function (n) {\n    return \"\".concat(n.name, \": \").concat(n.value, \";\");\n  }).join(\"\\n\") + \"\\n}\\n\",\n      p = [];\n  return i.overrides && (p = i.overrides.map(function (t) {\n    var e = r(t.tokens),\n        a = o(e).map(function (n) {\n      return \"\".concat(n.name, \": \").concat(n.value, \";\");\n    }).join(\"\\n\");\n\n    if (\"selector\" in t && (d += \"\\n\".concat(t.selector, \" {\\n\").concat(a, \"\\n}\\n\")), \"mediaQuery\" in t && (d += \"\\n@media (\".concat(t.mediaQuery, ') {\\n  [data-amplify-theme=\"').concat(s, '\"] {\\n    ').concat(a, \"\\n  }\\n}\\n\")), \"breakpoint\" in t) {\n      var c = i.breakpoints.values[t.breakpoint];\n      d += \"\\n@media (min-width: \".concat(c, 'px) {\\n  [data-amplify-theme=\"').concat(s, '\"] {\\n    ').concat(a, \"\\n  }\\n}\\n\");\n    }\n\n    return \"colorMode\" in t && (d += \"\\n@media (prefers-color-scheme: \".concat(t.colorMode, ') {\\n          [data-amplify-theme=\"').concat(s, '\"][data-amplify-color-mode=\"system\"] {\\n').concat(a, \"\\n}\\n        }\\n\"), d += '\\n[data-amplify-theme=\"'.concat(s, '\"][data-amplify-color-mode=\"').concat(t.colorMode, '\"] {\\n').concat(a, \"\\n}\\n\")), n(n({}, t), {\n      tokens: e\n    });\n  })), {\n    tokens: m,\n    breakpoints: l,\n    name: s,\n    cssText: d,\n    overrides: p\n  };\n}\n\nexport { i as createTheme };","map":null,"metadata":{},"sourceType":"module"}