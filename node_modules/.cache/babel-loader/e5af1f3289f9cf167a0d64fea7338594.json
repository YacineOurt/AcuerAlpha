{"ast":null,"code":"import _slicedToArray from \"/home/yacine/Pro/alpha/AcuerApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function isCoordinates(array) {\n  return Array.isArray(array) && typeof array[0] === \"number\" && typeof array[1] === \"number\";\n}\nexport function isCoordinatesArray(array) {\n  return isCoordinates(array[0]);\n}\nexport function isNamedLocation(object) {\n  return object && Array.isArray(object.coordinates) && typeof object.coordinates[0] === \"number\" && typeof object.coordinates[1] === \"number\";\n}\nexport function isNamedLocationArray(array) {\n  return isNamedLocation(array[0]);\n}\nexport function isGeofence(object) {\n  return object && typeof object.geofenceId === \"string\" && typeof object.geometry === \"object\";\n}\nexport function isGeofenceArray(array) {\n  return Array.isArray(array) && isGeofence(array[0]);\n}\nexport function isPolygon(object) {\n  return Array.isArray(object) && isCoordinatesArray(object[0]);\n}\nexport function isPolygonArray(array) {\n  return Array.isArray(array) && isPolygon(array[0]);\n}\nexport function isGeoJsonSource(source) {\n  return source.type === \"geojson\";\n}\nexport var strHasLength = function strHasLength(str) {\n  return typeof str === \"string\" && str.length > 0;\n};\nexport var getFeaturesFromData = function getFeaturesFromData(data) {\n  var features;\n\n  if (isCoordinatesArray(data)) {\n    features = data.map(function (point) {\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: point\n        },\n        properties: {\n          place_name: \"Coordinates,\".concat(point)\n        }\n      };\n    });\n  } else if (isNamedLocationArray(data)) {\n    features = data.map(function (location) {\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: location.coordinates\n        },\n        properties: {\n          title: location.title,\n          address: location.address\n        }\n      };\n    });\n  } else {\n    features = data;\n  }\n\n  return features;\n};\nexport var urlEncodePeriods = function urlEncodePeriods(str) {\n  return str.replace(/\\./g, \"%2E\");\n};\nexport function validateCoordinates(coordinates) {\n  var _coordinates = _slicedToArray(coordinates, 2),\n      lng = _coordinates[0],\n      lat = _coordinates[1];\n\n  if (!Number.isFinite(lng) || !Number.isFinite(lat)) {\n    throw new Error(\"Invalid coordinates: [\".concat(lng, \",\").concat(lat, \"]\"));\n  }\n\n  if (lat < -90 || lat > 90) {\n    var errorString = \"Latitude must be between -90 and 90 degrees inclusive.\";\n    console.warn(errorString);\n    throw new Error(errorString);\n  } else if (lng < -180 || lng > 180) {\n    var _errorString = \"Longitude must be between -180 and 180 degrees inclusive.\";\n    console.warn(_errorString);\n    throw new Error(_errorString);\n  }\n}\nexport function createElement(tagName, className, container) {\n  var el = window.document.createElement(tagName);\n  if (className !== undefined) el.className = className;\n  if (container) container.appendChild(el);\n  return el;\n}\nexport function removeElement(node) {\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}