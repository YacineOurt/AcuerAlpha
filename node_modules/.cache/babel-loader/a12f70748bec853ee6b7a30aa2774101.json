{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as r, jsx as s } from \"react/jsx-runtime\";\nimport * as i from \"react\";\nimport o from \"classnames\";\nimport { ComponentClassNames as t } from \"../shared/constants.js\";\nimport \"../Field/FieldClearButton.js\";\nimport { FieldDescription as l } from \"../Field/FieldDescription.js\";\nimport { FieldErrorMessage as d } from \"../Field/FieldErrorMessage.js\";\nimport { Flex as a } from \"../Flex/Flex.js\";\nimport { Label as n } from \"../Label/Label.js\";\nimport { Select as m } from \"../Select/Select.js\";\nimport { splitPrimitiveProps as c } from \"../shared/styleUtils.js\";\nimport { useStableId as p } from \"../utils/useStableId.js\";\n\nvar h = function h(_ref) {\n  var e = _ref.children,\n      r = _ref.options;\n  return e ? ((null == r ? void 0 : r.length) && console.warn(\"Amplify UI: <SelectField> component  defaults to rendering children over `options`. When using the `options` prop, omit children.\"), e) : null == r ? void 0 : r.map(function (e, r) {\n    return s(\"option\", Object.assign({\n      label: e,\n      value: e\n    }, {\n      children: e\n    }), \"\".concat(e, \"-\").concat(r));\n  });\n},\n    b = i.forwardRef(function (i, b) {\n  var f = i.children,\n      j = i.className,\n      F = i.descriptiveText,\n      u = i.errorMessage,\n      _i$hasError = i.hasError,\n      g = _i$hasError === void 0 ? !1 : _i$hasError,\n      v = i.id,\n      x = i.label,\n      _i$labelHidden = i.labelHidden,\n      S = _i$labelHidden === void 0 ? !1 : _i$labelHidden,\n      y = i.options,\n      E = i.size,\n      I = i.testId,\n      z = e(i, [\"children\", \"className\", \"descriptiveText\", \"errorMessage\", \"hasError\", \"id\", \"label\", \"labelHidden\", \"options\", \"size\", \"testId\"]),\n      H = p(v),\n      M = p(),\n      N = F ? M : void 0,\n      _c = c(z),\n      O = _c.flexContainerStyleProps,\n      T = _c.baseStyleProps,\n      w = _c.rest;\n\n  return r(a, Object.assign({\n    className: o(t.Field, t.SelectField, j),\n    \"data-size\": E,\n    testId: I\n  }, T, O, {\n    children: [s(n, Object.assign({\n      htmlFor: H,\n      visuallyHidden: S\n    }, {\n      children: x\n    })), s(l, {\n      id: M,\n      labelHidden: S,\n      descriptiveText: F\n    }), s(m, Object.assign({\n      \"aria-describedby\": N,\n      hasError: g,\n      id: H,\n      ref: b,\n      size: E\n    }, w, {\n      children: h({\n        children: f,\n        options: y\n      })\n    })), s(d, {\n      hasError: g,\n      errorMessage: u\n    })]\n  }));\n});\n\nb.displayName = \"SelectField\";\nexport { b as SelectField };","map":null,"metadata":{},"sourceType":"module"}