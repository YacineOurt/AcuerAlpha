{"ast":null,"code":"/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr) {\n  var newTransform = tr.clone(); // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\n\nexport function transformToViewState(tr) {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n/* eslint-disable complexity */\n\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\n\nexport function applyViewStateToTransform(tr, props) {\n  var v = props.viewState || props;\n  var changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    var center = tr.center; // @ts-ignore\n\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n\n  if ('zoom' in v) {\n    var zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n\n  if ('bearing' in v) {\n    var bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n\n  if ('pitch' in v) {\n    var pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n\n  return changed;\n}","map":null,"metadata":{},"sourceType":"module"}