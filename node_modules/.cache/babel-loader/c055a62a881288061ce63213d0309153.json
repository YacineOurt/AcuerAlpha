{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as a, jsx as s } from \"react/jsx-runtime\";\nimport * as i from \"react\";\nimport c from \"classnames\";\nimport { classNameModifierByFlag as o, classNameModifier as l } from \"../shared/utils.js\";\nimport { ComponentClassNames as t } from \"../shared/constants.js\";\nimport { Flex as d } from \"../Flex/Flex.js\";\nimport { Input as r } from \"../Input/Input.js\";\nimport { Label as n } from \"../Label/Label.js\";\nimport { useStableId as h } from \"../utils/useStableId.js\";\nimport { useSwitch as m } from \"./useSwitch.js\";\nimport { View as b } from \"../View/View.js\";\nimport { VisuallyHidden as u } from \"../VisuallyHidden/VisuallyHidden.js\";\nvar p = i.forwardRef(function (i, p) {\n  var k = i.className,\n      f = i.defaultChecked,\n      C = i.id,\n      w = i.isChecked,\n      j = i.isDisabled,\n      S = i.isLabelHidden,\n      g = i.label,\n      F = i.labelPosition,\n      N = i.name,\n      T = i.onChange,\n      x = i.size,\n      H = i.thumbColor,\n      L = i.trackCheckedColor,\n      O = i.trackColor,\n      v = i.value,\n      y = e(i, [\"className\", \"defaultChecked\", \"id\", \"isChecked\", \"isDisabled\", \"isLabelHidden\", \"label\", \"labelPosition\", \"name\", \"onChange\", \"size\", \"thumbColor\", \"trackCheckedColor\", \"trackColor\", \"value\"]);\n\n  var _m = m({\n    onChange: T,\n    isChecked: w,\n    defaultChecked: f,\n    isDisabled: j\n  }),\n      I = _m.isOn,\n      V = _m.changeHandler,\n      z = _m.isFocused,\n      D = _m.setIsFocused,\n      P = h(C),\n      W = S ? u : b,\n      B = c(t.SwitchTrack, o(t.SwitchTrack, \"checked\", I), o(t.SwitchTrack, \"disabled\", j), o(t.SwitchTrack, \"focused\", z)),\n      R = c(t.SwitchThumb, o(t.SwitchThumb, \"checked\", I), o(t.SwitchThumb, \"disabled\", j));\n\n  return a(d, Object.assign({\n    className: c(t.SwitchField, l(t.SwitchField, x), k),\n    \"data-size\": x,\n    \"data-label-position\": F,\n    ref: p\n  }, y, {\n    children: [s(u, {\n      children: s(r, {\n        role: \"switch\",\n        type: \"checkbox\",\n        id: P,\n        onChange: V,\n        disabled: j,\n        name: N,\n        checked: I,\n        value: v,\n        onFocus: function onFocus() {\n          D(!0);\n        },\n        onBlur: function onBlur() {\n          D(!1);\n        }\n      })\n    }), a(n, Object.assign({\n      htmlFor: P,\n      className: c(t.SwitchWrapper, l(t.SwitchWrapper, F)),\n      \"data-label-position\": F\n    }, {\n      children: [s(W, Object.assign({\n        as: \"span\",\n        className: t.SwitchLabel\n      }, {\n        children: g\n      })), s(b, Object.assign({\n        as: \"span\",\n        className: B,\n        \"data-checked\": I,\n        \"data-disabled\": j,\n        \"data-focused\": z,\n        backgroundColor: I ? L : O\n      }, {\n        children: s(b, {\n          as: \"span\",\n          className: R,\n          \"data-checked\": I,\n          \"data-disabled\": j,\n          backgroundColor: H\n        })\n      }))]\n    }))]\n  }));\n});\np.displayName = \"SwitchField\";\nexport { p as SwitchField };","map":null,"metadata":{},"sourceType":"module"}