{"ast":null,"code":"import _slicedToArray from \"/home/yacine/Pro/alpha/AcuerApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport { __awaiter as e } from \"../../../node_modules/tslib/tslib.es6.js\";\nimport { jsx as t, jsxs as o } from \"react/jsx-runtime\";\nimport i from \"qrcode\";\nimport * as r from \"react\";\nimport { Logger as s, Auth as a } from \"aws-amplify\";\nimport { translate as n, getActorState as m } from \"@aws-amplify/ui\";\nimport { Flex as d } from \"../../../primitives/Flex/Flex.js\";\nimport { Heading as l } from \"../../../primitives/Heading/Heading.js\";\nimport { useAuthenticator as c } from \"../hooks/useAuthenticator/index.js\";\nimport { useCustomComponents as p } from \"../hooks/useCustomComponents/index.js\";\nimport { useFormHandlers as u } from \"../hooks/useFormHandlers/useFormHandlers.js\";\nimport { ConfirmSignInFooter as f } from \"../shared/ConfirmSignInFooter.js\";\nimport { RemoteErrorMessage as h } from \"../shared/RemoteErrorMessage.js\";\nimport { FormFields as g } from \"../shared/FormFields.js\";\nimport { RouteContainer as j } from \"../RouteContainer/RouteContainer.js\";\n\nvar v = new s(\"SetupTOTP-logger\"),\n    b = function b(e, t, o) {\n  return encodeURI(\"otpauth://totp/\".concat(e, \":\").concat(t, \"?secret=\").concat(o, \"&issuer=\").concat(e));\n},\n    C = function C(_ref) {\n  var s = _ref.className,\n      l = _ref.variation;\n  var O, y;\n\n  var _c = c(function (e) {\n    return [e.isPending];\n  }),\n      H = _c._state,\n      w = _c.isPending,\n      _u = u(),\n      F = _u.handleChange,\n      S = _u.handleSubmit,\n      _p = p(),\n      _p$components$SetupTO = _p.components.SetupTOTP,\n      _p$components$SetupTO2 = _p$components$SetupTO.Header,\n      T = _p$components$SetupTO2 === void 0 ? C.Header : _p$components$SetupTO2,\n      _p$components$SetupTO3 = _p$components$SetupTO.Footer,\n      x = _p$components$SetupTO3 === void 0 ? C.Footer : _p$components$SetupTO3,\n      _r$useState = r.useState(!0),\n      _r$useState2 = _slicedToArray(_r$useState, 2),\n      P = _r$useState2[0],\n      V = _r$useState2[1],\n      _r$useState3 = r.useState(),\n      _r$useState4 = _slicedToArray(_r$useState3, 2),\n      R = _r$useState4[0],\n      k = _r$useState4[1],\n      _r$useState5 = r.useState(\"COPY\"),\n      _r$useState6 = _slicedToArray(_r$useState5, 2),\n      I = _r$useState6[0],\n      L = _r$useState6[1],\n      _r$useState7 = r.useState(\"\"),\n      _r$useState8 = _slicedToArray(_r$useState7, 2),\n      M = _r$useState8[0],\n      $ = _r$useState8[1],\n      q = m(H),\n      _q$context = q.context,\n      D = _q$context.formFields,\n      E = _q$context.user,\n      _ref2 = null !== (y = null === (O = null == D ? void 0 : D.setupTOTP) || void 0 === O ? void 0 : O.QR) && void 0 !== y ? y : {},\n      _ref2$totpIssuer = _ref2.totpIssuer,\n      U = _ref2$totpIssuer === void 0 ? \"AWSCognito\" : _ref2$totpIssuer,\n      _ref2$totpUsername = _ref2.totpUsername,\n      Z = _ref2$totpUsername === void 0 ? E.username : _ref2$totpUsername,\n      A = r.useCallback(function (t) {\n    return e(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _e, _o, _r;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return a.setupTOTP(t);\n\n            case 3:\n              _e = _context.sent;\n              $(_e);\n              _o = b(U, Z, _e);\n              _context.next = 8;\n              return i.toDataURL(_o);\n\n            case 8:\n              _r = _context.sent;\n              k(_r);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              v.error(_context.t0);\n\n            case 15:\n              _context.prev = 15;\n              V(!1);\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12, 15, 18]]);\n    }));\n  }, [U, Z]);\n\n  r.useEffect(function () {\n    E && A(E);\n  }, [A, E]);\n  return t(j, Object.assign({\n    className: s,\n    variation: l\n  }, {\n    children: t(\"form\", Object.assign({\n      \"data-amplify-form\": \"\",\n      \"data-amplify-authenticator-setup-totp\": \"\",\n      method: \"post\",\n      onChange: F,\n      onSubmit: S\n    }, {\n      children: o(d, Object.assign({\n        as: \"fieldset\",\n        direction: \"column\",\n        isDisabled: w\n      }, {\n        children: [t(T, {}), o(d, Object.assign({\n          direction: \"column\"\n        }, {\n          children: [P ? o(\"p\", {\n            children: [n(\"Loading\"), \"…\"]\n          }) : t(\"img\", {\n            \"data-amplify-qrcode\": !0,\n            src: R,\n            alt: \"qr code\",\n            width: \"228\",\n            height: \"228\"\n          }), o(d, Object.assign({\n            \"data-amplify-copy\": !0\n          }, {\n            children: [t(\"div\", {\n              children: M\n            }), o(d, Object.assign({\n              \"data-amplify-copy-svg\": !0,\n              onClick: function onClick() {\n                navigator.clipboard.writeText(M), L(n(\"COPIED\"));\n              }\n            }, {\n              children: [t(\"div\", Object.assign({\n                \"data-amplify-copy-tooltip\": !0\n              }, {\n                children: I\n              })), t(\"svg\", Object.assign({\n                width: \"24\",\n                height: \"24\",\n                viewBox: \"0 0 24 24\",\n                xmlns: \"http://www.w3.org/2000/svg\"\n              }, {\n                children: t(\"path\", {\n                  d: \"M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM15 5H8C6.9 5 6.01 5.9 6.01 7L6 21C6 22.1 6.89 23 7.99 23H19C20.1 23 21 22.1 21 21V11L15 5ZM8 21V7H14V12H19V21H8Z\"\n                })\n              }))]\n            }))]\n          })), t(g, {}), t(h, {})]\n        })), t(f, {}), t(x, {})]\n      }))\n    }))\n  }));\n};\n\nC.Header = function () {\n  return t(l, Object.assign({\n    level: 3\n  }, {\n    children: n(\"Setup TOTP\")\n  }));\n}, C.Footer = function () {\n  return null;\n};\nexport { C as SetupTOTP, b as getTotpCode };","map":null,"metadata":{},"sourceType":"module"}