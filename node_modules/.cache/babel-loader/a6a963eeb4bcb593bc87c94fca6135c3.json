{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './utils';\n\nfunction isService(actor) {\n  return 'state' in actor && 'machine' in actor;\n}\n\nvar defaultCompare = function defaultCompare(a, b) {\n  return a === b;\n};\n\nvar defaultGetSnapshot = function defaultGetSnapshot(a) {\n  return isService(a) ? getServiceSnapshot(a) : isActorWithState(a) ? a.state : undefined;\n};\n\nexport function useSelector(actor, selector, compare, getSnapshot) {\n  if (compare === void 0) {\n    compare = defaultCompare;\n  }\n\n  if (getSnapshot === void 0) {\n    getSnapshot = defaultGetSnapshot;\n  }\n\n  var subscribe = useCallback(function (handleStoreChange) {\n    var unsubscribe = actor.subscribe(handleStoreChange).unsubscribe;\n    return unsubscribe;\n  }, [actor]);\n  var boundGetSnapshot = useCallback(function () {\n    return getSnapshot(actor);\n  }, [actor, getSnapshot]);\n  var selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}","map":null,"metadata":{},"sourceType":"module"}