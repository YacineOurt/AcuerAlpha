{"ast":null,"code":"import { jsxs as e, jsx as o } from \"react/jsx-runtime\";\nimport { FederatedIdentityProviders as i, translate as t } from \"@aws-amplify/ui\";\nimport { Divider as r } from \"../../../primitives/Divider/Divider.js\";\nimport { Flex as n } from \"../../../primitives/Flex/Flex.js\";\nimport { useAuthenticator as s } from \"../hooks/useAuthenticator/index.js\";\nimport { FederatedSignInButton as a } from \"./FederatedSignInButtons/FederatedSignInButton.js\";\n\nfunction p() {\n  var _s = s(function (e) {\n    return [e.route];\n  }),\n      p = _s._state,\n      c = _s.route,\n      _p$context$config$soc = p.context.config.socialProviders,\n      m = _p$context$config$soc === void 0 ? [] : _p$context$config$soc;\n\n  if (0 === m.length) return null;\n  var l = \"signUp\" === c ? \"Up\" : \"In\";\n  return e(n, Object.assign({\n    direction: \"column\",\n    padding: \"0 0 1rem 0\",\n    className: \"federated-sign-in-container\"\n  }, {\n    children: [m.map(function (e) {\n      switch (e) {\n        case \"amazon\":\n          return o(a, {\n            icon: \"amazon\",\n            provider: i.Amazon,\n            text: t(\"Sign \".concat(l, \" with Amazon\"))\n          }, e);\n\n        case \"apple\":\n          return o(a, {\n            icon: \"apple\",\n            provider: i.Apple,\n            text: t(\"Sign \".concat(l, \" with Apple\"))\n          }, e);\n\n        case \"facebook\":\n          return o(a, {\n            icon: \"facebook\",\n            provider: i.Facebook,\n            text: t(\"Sign \".concat(l, \" with Facebook\"))\n          }, e);\n\n        case \"google\":\n          return o(a, {\n            icon: \"google\",\n            provider: i.Google,\n            text: t(\"Sign \".concat(l, \" with Google\"))\n          }, e);\n\n        default:\n          console.error(\"Authenticator does not support \".concat(e, \". Please open an issue: https://github.com/aws-amplify/amplify-ui/issues/choose\"));\n      }\n    }), o(r, {\n      size: \"small\",\n      label: \"or\"\n    })]\n  }));\n}\n\nexport { p as FederatedSignIn };","map":null,"metadata":{},"sourceType":"module"}