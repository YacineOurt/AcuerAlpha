{"ast":null,"code":"var MapboxDraw = require('@mapbox/mapbox-gl-draw');\n\nvar createSupplementaryPoints = require('../utils/create_supplementary_points');\n\nvar moveFeatures = require('../utils/move_features');\n\nvar Constants = require('../utils/constants');\n\nvar constrainFeatureMovement = require(\"../utils/constrain_feature_movement\");\n\nvar distance = require('@turf/distance').default;\n\nvar turfHelpers = require('@turf/helpers');\n\nvar circle = require('@turf/circle').default;\n\nvar createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\nvar DirectModeOverride = MapboxDraw.modes.direct_select;\n\nDirectModeOverride.dragFeature = function (state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected().filter(function (feature) {\n    return feature.properties.isCircle;\n  }).map(function (circle) {\n    return circle.properties.center;\n  }).forEach(function (center) {\n    center[0] += delta.lng;\n    center[1] += delta.lat;\n  });\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectModeOverride.dragVertex = function (state, e, delta) {\n  if (state.feature.properties.isCircle) {\n    var center = state.feature.properties.center;\n    var movedVertex = [e.lngLat.lng, e.lngLat.lat];\n    var radius = distance(turfHelpers.point(center), turfHelpers.point(movedVertex), {\n      units: 'kilometers'\n    });\n    var circleFeature = circle(center, radius);\n    state.feature.incomingCoords(circleFeature.geometry.coordinates);\n    state.feature.properties.radiusInKm = radius;\n  } else {\n    var selectedCoords = state.selectedCoordPaths.map(function (coord_path) {\n      return state.feature.getCoordinate(coord_path);\n    });\n    var selectedCoordPoints = selectedCoords.map(function (coords) {\n      return {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coords\n        }\n      };\n    });\n    var constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n\n    for (var i = 0; i < selectedCoords.length; i++) {\n      var coord = selectedCoords[i];\n      state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n    }\n  }\n};\n\nDirectModeOverride.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    var supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    });\n    supplementaryPoints.forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n\n  this.fireActionable(state);\n};\n\nmodule.exports = DirectModeOverride;","map":null,"metadata":{},"sourceType":"script"}