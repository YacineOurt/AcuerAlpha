{"ast":null,"code":"import { __assign as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { getActorState as t, getActorContext as r } from \"./actor.js\";\n\nvar n = function n(e) {\n  var t = function t(_t) {\n    return function (r) {\n      return e({\n        type: _t,\n        data: r\n      });\n    };\n  };\n\n  return {\n    resendCode: t(\"RESEND\"),\n    signOut: t(\"SIGN_OUT\"),\n    submitForm: t(\"SUBMIT\"),\n    updateForm: t(\"CHANGE\"),\n    updateBlur: t(\"BLUR\"),\n    toFederatedSignIn: t(\"FEDERATED_SIGN_IN\"),\n    toResetPassword: t(\"RESET_PASSWORD\"),\n    toSignIn: t(\"SIGN_IN\"),\n    toSignUp: t(\"SIGN_UP\"),\n    skipVerification: t(\"SKIP\")\n  };\n},\n    s = function s(n) {\n  var s,\n      i,\n      a = null === (s = n.context) || void 0 === s ? void 0 : s.user,\n      u = t(n),\n      o = r(n),\n      c = null == o ? void 0 : o.remoteError,\n      d = e({}, null == o ? void 0 : o.validationError),\n      l = null == o ? void 0 : o.codeDeliveryDetails,\n      m = Object.keys(d).length > 0,\n      f = n.hasTag(\"pending\") || (null === (i = t(n)) || void 0 === i ? void 0 : i.hasTag(\"pending\")),\n      v = function () {\n    switch (!0) {\n      case n.matches(\"idle\"):\n        return \"idle\";\n\n      case n.matches(\"setup\"):\n        return \"setup\";\n\n      case n.matches(\"signOut\"):\n        return \"signOut\";\n\n      case n.matches(\"authenticated\"):\n        return \"authenticated\";\n\n      case null == u ? void 0 : u.matches(\"autoSignIn\"):\n        return \"autoSignIn\";\n\n      case null == u ? void 0 : u.matches(\"confirmSignUp\"):\n        return \"confirmSignUp\";\n\n      case null == u ? void 0 : u.matches(\"confirmSignIn\"):\n        return \"confirmSignIn\";\n\n      case null == u ? void 0 : u.matches(\"setupTOTP\"):\n        return \"setupTOTP\";\n\n      case null == u ? void 0 : u.matches(\"signIn\"):\n        return \"signIn\";\n\n      case null == u ? void 0 : u.matches(\"signUp\"):\n        return \"signUp\";\n\n      case null == u ? void 0 : u.matches(\"forceNewPassword\"):\n        return \"forceNewPassword\";\n\n      case null == u ? void 0 : u.matches(\"resetPassword\"):\n        return \"resetPassword\";\n\n      case null == u ? void 0 : u.matches(\"confirmResetPassword\"):\n        return \"confirmResetPassword\";\n\n      case null == u ? void 0 : u.matches(\"verifyUser\"):\n        return \"verifyUser\";\n\n      case null == u ? void 0 : u.matches(\"confirmVerifyUser\"):\n        return \"confirmVerifyUser\";\n\n      default:\n        return console.debug(\"Cannot infer `route` from Authenticator state:\", n.value), null;\n    }\n  }(),\n      h = function (e) {\n    switch (e) {\n      case \"idle\":\n      case \"setup\":\n        return \"configuring\";\n\n      case \"authenticated\":\n        return \"authenticated\";\n\n      default:\n        return \"unauthenticated\";\n    }\n  }(v);\n\n  return {\n    error: c,\n    hasValidationErrors: m,\n    isPending: f,\n    route: v,\n    authStatus: h,\n    user: a,\n    validationErrors: d,\n    codeDeliveryDetails: l\n  };\n},\n    i = function i(t) {\n  var r = t.send,\n      i = t.state,\n      a = n(r),\n      u = s(i);\n  return e(e({}, a), u);\n};\n\nexport { n as getSendEventAliases, s as getServiceContextFacade, i as getServiceFacade };","map":null,"metadata":{},"sourceType":"module"}