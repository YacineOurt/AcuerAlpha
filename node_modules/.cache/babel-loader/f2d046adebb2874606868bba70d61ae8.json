{"ast":null,"code":"/*\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar createRegex = require('./createReferenceRegex');\n/**\n * Checks if the value uses a value reference.\n * @memberof Dictionary\n * @param {string} value\n * @param {Object|RegExp} regexOrOptions\n * @returns {boolean} - True, if the value uses a value reference\n */\n\n\nfunction usesReference(value) {\n  var regexOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var regex = regexOrOptions instanceof RegExp ? regexOrOptions : createRegex(regexOrOptions);\n\n  if (typeof value === 'string') {\n    return regex.test(value);\n  }\n\n  if (typeof value === 'object') {\n    var hasReference = false; // iterate over each property in the object,\n    // if any element passes the regex test,\n    // the whole thing should be true\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        var element = value[key];\n        var reference = usesReference(element, regexOrOptions);\n\n        if (reference) {\n          hasReference = true;\n          break;\n        }\n      }\n    }\n\n    return hasReference;\n  }\n\n  return false;\n}\n\nmodule.exports = usesReference;","map":null,"metadata":{},"sourceType":"script"}