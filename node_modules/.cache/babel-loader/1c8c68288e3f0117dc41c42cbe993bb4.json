{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nexport default function useControl(onCreate, onRemove, opts) {\n  var context = useContext(MapContext);\n  var ctrl = useMemo(function () {\n    return onCreate(context);\n  }, []);\n  useEffect(function () {\n    var _a;\n\n    var map = context.map;\n\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, (_a = opts || onRemove) === null || _a === void 0 ? void 0 : _a.position);\n    }\n\n    return function () {\n      if (typeof onRemove === 'function') {\n        onRemove(context);\n      } // Map might have been removed (parent effects are destroyed before child ones)\n\n\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n  return ctrl;\n}","map":null,"metadata":{},"sourceType":"module"}