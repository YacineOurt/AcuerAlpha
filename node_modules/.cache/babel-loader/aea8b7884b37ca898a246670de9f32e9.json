{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as t, jsx as r } from \"react/jsx-runtime\";\nimport * as i from \"react\";\nimport a from \"classnames\";\nimport { classNameModifier as l } from \"../shared/utils.js\";\nimport { ComponentClassNames as s } from \"../shared/constants.js\";\nimport { View as o } from \"../View/View.js\";\nvar n = \"linear-empty\",\n    d = \"linear-filled\",\n    c = \"circular-empty\",\n    m = \"circular-filled\",\n    y = 8,\n    p = 42,\n    f = 84 * Math.PI,\n    g = i.forwardRef(function (i, n) {\n  var d = i.className,\n      c = i.filledColor,\n      m = i.emptyColor,\n      y = i.size,\n      p = i.variation,\n      _i$isDeterminate = i.isDeterminate,\n      g = _i$isDeterminate === void 0 ? !1 : _i$isDeterminate,\n      _i$isPercentageTextHi = i.isPercentageTextHidden,\n      x = _i$isPercentageTextHi === void 0 ? !1 : _i$isPercentageTextHi,\n      _i$percentage = i.percentage,\n      u = _i$percentage === void 0 ? 0 : _i$percentage,\n      h = e(i, [\"className\", \"filledColor\", \"emptyColor\", \"size\", \"variation\", \"isDeterminate\", \"isPercentageTextHidden\", \"percentage\"]);\n  u = Math.min(u, 100);\n  var v = \"\".concat(u = Math.max(u, 0), \"%\"),\n      j = a(s.Loader, l(s.Loader, y), l(s.Loader, p), g ? s.LoaderDeterminate : null, d),\n      k = t(\"g\", {\n    children: [r(\"line\", {\n      x1: \"0\",\n      x2: \"100%\",\n      y1: \"50%\",\n      y2: \"50%\",\n      style: {\n        stroke: String(m)\n      },\n      \"data-testid\": \"linear-empty\"\n    }), r(\"line\", {\n      x1: \"0\",\n      x2: g ? v : \"100%\",\n      y1: \"50%\",\n      y2: \"50%\",\n      style: {\n        stroke: g && 0 === u ? \"none\" : c ? String(c) : void 0\n      },\n      \"data-testid\": \"linear-filled\"\n    }), g ? r(\"text\", Object.assign({\n      \"aria-live\": \"polite\",\n      className: a(s.LoaderPercentageText, x ? s.VisuallyHidden : null),\n      x: \"\".concat(-1 + u, \"%\"),\n      y: \"200%\"\n    }, {\n      children: v\n    })) : null]\n  }),\n      L = t(\"g\", {\n    children: [r(\"circle\", {\n      cx: \"50%\",\n      cy: \"50%\",\n      r: \"42%\",\n      strokeWidth: \"8%\",\n      style: {\n        stroke: String(m)\n      },\n      \"data-testid\": \"circular-empty\"\n    }), r(\"circle\", {\n      cx: \"50%\",\n      cy: \"50%\",\n      r: \"42%\",\n      strokeWidth: \"8%\",\n      style: {\n        stroke: String(c),\n        strokeDasharray: g ? \"\".concat(f, \"% \").concat(f, \"%\") : void 0,\n        strokeDashoffset: g ? f - f * u / 100 + \"%\" : void 0\n      },\n      \"data-testid\": \"circular-filled\"\n    }), g ? r(\"text\", Object.assign({\n      \"aria-live\": \"polite\",\n      className: a(s.LoaderPercentageText, x ? s.VisuallyHidden : null),\n      x: \"130%\",\n      y: \"80%\"\n    }, {\n      children: v\n    })) : null]\n  });\n  return r(o, Object.assign({\n    as: \"svg\",\n    className: j,\n    \"data-size\": y,\n    \"data-variation\": p,\n    ref: n,\n    role: \"img\"\n  }, h, {\n    children: \"linear\" === p ? k : L\n  }));\n});\ng.displayName = \"Loader\";\nexport { c as CIRCULAR_EMPTY, m as CIRCULAR_FILLED, y as CIRCULAR_STROKE_WIDTH, f as CIRCUMFERENCE, n as LINEAR_EMPTY, d as LINEAR_FILLED, g as Loader, p as RADIUS };","map":null,"metadata":{},"sourceType":"module"}