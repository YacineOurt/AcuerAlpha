{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e3) { throw _e3; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e4) { didErr = true; err = _e4; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { isDesignToken as r } from \"@aws-amplify/ui\";\nimport { getCSSVariableIfValueIsThemeKey as t } from \"../utils.js\";\n\nvar o = function o(_ref) {\n  var o = _ref.breakpoint,\n      e = _ref.breakpoints,\n      i = _ref.propKey,\n      n = _ref.values;\n  if (r(n)) return n.toString();\n  if (\"object\" != typeof n) return t(i, n);\n  var s = {};\n  var p = Object.keys(e).sort(function (r, t) {\n    return e[r] - e[t];\n  });\n  return Array.isArray(n) ? n.map(function (r, t) {\n    s[p[t]] = r;\n  }) : s = n, function (_ref2) {\n    var o = _ref2.breakpoint,\n        e = _ref2.breakpoints,\n        i = _ref2.propKey,\n        n = _ref2.values;\n\n    if (void 0 !== n[o]) {\n      var _e = n[o];\n      return r(_e) ? _e.toString() : t(i, _e);\n    }\n\n    var s = Object.keys(e).sort(function (r, t) {\n      return e[t] - e[r];\n    }),\n        p = s.slice(s.indexOf(o));\n\n    var _iterator = _createForOfIteratorHelper(p),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _o = _step.value;\n\n        if (void 0 !== n[_o]) {\n          var _e2 = n[_o];\n          return r(_e2) ? _e2.toString() : t(i, _e2);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return null;\n  }({\n    breakpoint: o,\n    breakpoints: e,\n    propKey: i,\n    values: s\n  });\n};\n\nexport { o as getValueAtCurrentBreakpoint };","map":null,"metadata":{},"sourceType":"module"}