{"ast":null,"code":"import { __rest as e } from \"../../node_modules/tslib/tslib.es6.js\";\nimport { jsxs as i, jsx as t } from \"react/jsx-runtime\";\nimport * as r from \"react\";\nimport s from \"classnames\";\nimport { useStepper as a } from \"./useStepper.js\";\nimport \"../Field/FieldClearButton.js\";\nimport { FieldDescription as o } from \"../Field/FieldDescription.js\";\nimport { FieldErrorMessage as l } from \"../Field/FieldErrorMessage.js\";\nimport { FieldGroup as n } from \"../FieldGroup/FieldGroup.js\";\nimport \"../FieldGroupIcon/FieldGroupIcon.js\";\nimport { FieldGroupIconButton as d } from \"../FieldGroupIcon/FieldGroupIconButton.js\";\nimport { Flex as p } from \"../Flex/Flex.js\";\nimport { IconAdd as c } from \"../Icon/icons/IconAdd.js\";\nimport { ComponentClassNames as m, ComponentText as u } from \"../shared/constants.js\";\nimport \"../View/View.js\";\nimport { IconRemove as b } from \"../Icon/icons/IconRemove.js\";\nimport { Input as h } from \"../Input/Input.js\";\nimport { Label as f } from \"../Label/Label.js\";\nimport { classNameModifier as F, classNameModifierByFlag as j } from \"../shared/utils.js\";\nimport { splitPrimitiveProps as g } from \"../shared/styleUtils.js\";\nimport { useStableId as I } from \"../utils/useStableId.js\";\nvar B = \"decrease-icon\",\n    S = \"increase-icon\",\n    v = r.forwardRef(function (B, S) {\n  var v = B.className,\n      D = B.descriptiveText,\n      O = B.defaultValue,\n      y = B.errorMessage,\n      _B$hasError = B.hasError,\n      C = _B$hasError === void 0 ? !1 : _B$hasError,\n      L = B.id,\n      x = B.isDisabled,\n      R = B.isReadOnly,\n      E = B.isRequired,\n      _B$increaseButtonLabe = B.increaseButtonLabel,\n      N = _B$increaseButtonLabe === void 0 ? u.StepperField.increaseButtonLabel : _B$increaseButtonLabe,\n      _B$decreaseButtonLabe = B.decreaseButtonLabel,\n      w = _B$decreaseButtonLabe === void 0 ? u.StepperField.decreaseButtonLabel : _B$decreaseButtonLabe,\n      z = B.label,\n      _B$labelHidden = B.labelHidden,\n      G = _B$labelHidden === void 0 ? !1 : _B$labelHidden,\n      V = B.onStepChange,\n      H = B.size,\n      M = B.variation,\n      $ = B.testId,\n      q = B.bottom,\n      T = B.height,\n      k = B.left,\n      P = B.padding,\n      W = B.position,\n      A = B.right,\n      U = B.top,\n      _ = B.width,\n      J = B.value,\n      K = e(B, [\"className\", \"descriptiveText\", \"defaultValue\", \"errorMessage\", \"hasError\", \"id\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"increaseButtonLabel\", \"decreaseButtonLabel\", \"label\", \"labelHidden\", \"onStepChange\", \"size\", \"variation\", \"testId\", \"bottom\", \"height\", \"left\", \"padding\", \"position\", \"right\", \"top\", \"width\", \"value\"]),\n      Q = I(L),\n      X = I(),\n      Y = D ? X : void 0,\n      _g = g(K),\n      Z = _g.baseStyleProps,\n      ee = _g.flexContainerStyleProps,\n      ie = _g.rest,\n      _a = a(B),\n      te = _a.step,\n      re = _a.value,\n      se = _a.inputValue,\n      ae = _a.handleDecrease,\n      oe = _a.handleIncrease,\n      le = _a.handleOnBlur,\n      ne = _a.handleOnChange,\n      de = _a.handleOnWheel,\n      pe = _a.setInputValue,\n      ce = _a.shouldDisableDecreaseButton,\n      me = _a.shouldDisableIncreaseButton;\n\n  return r.useEffect(function () {\n    void 0 !== J && pe(J);\n  }, [J, pe]), i(p, Object.assign({\n    className: s(m.Field, F(m.Field, H), m.StepperField, v),\n    \"data-size\": H,\n    \"data-variation\": M,\n    testId: $,\n    width: _,\n    height: T,\n    position: W,\n    padding: P,\n    top: U,\n    right: A,\n    left: k,\n    bottom: q\n  }, ee, {\n    children: [t(f, Object.assign({\n      htmlFor: Q,\n      visuallyHidden: G\n    }, {\n      children: z\n    })), t(o, {\n      id: X,\n      labelHidden: G,\n      descriptiveText: D\n    }), t(n, Object.assign({\n      outerStartComponent: t(d, Object.assign({\n        \"aria-controls\": Q,\n        ariaLabel: \"\".concat(w, \" \").concat(re - te),\n        className: s(m.StepperFieldButtonDecrease, F(m.StepperFieldButtonDecrease, M), j(m.StepperFieldButtonDecrease, \"disabled\", ce)),\n        \"data-invalid\": C,\n        isDisabled: ce,\n        onClick: ae,\n        size: H\n      }, {\n        children: t(b, {\n          \"data-testid\": \"decrease-icon\"\n        })\n      })),\n      outerEndComponent: t(d, Object.assign({\n        \"aria-controls\": Q,\n        ariaLabel: \"\".concat(N, \" \").concat(re + te),\n        className: s(m.StepperFieldButtonIncrease, F(m.StepperFieldButtonIncrease, M), j(m.StepperFieldButtonIncrease, \"disabled\", me)),\n        \"data-invalid\": C,\n        isDisabled: me,\n        onClick: oe,\n        size: H\n      }, {\n        children: t(c, {\n          \"data-testid\": \"increase-icon\"\n        })\n      }))\n    }, {\n      children: t(h, Object.assign({\n        \"aria-describedby\": Y,\n        className: m.StepperFieldInput,\n        hasError: C,\n        id: Q,\n        isDisabled: x,\n        isReadOnly: R,\n        isRequired: E,\n        onBlur: le,\n        onChange: ne,\n        onWheel: de,\n        ref: S,\n        size: H,\n        variation: M,\n        type: \"number\",\n        value: se\n      }, Z, ie))\n    })), t(l, {\n      hasError: C,\n      errorMessage: y\n    })]\n  }));\n});\nv.displayName = \"StepperField\";\nexport { B as DECREASE_ICON, S as INCREASE_ICON, v as StepperField };","map":null,"metadata":{},"sourceType":"module"}