{"ast":null,"code":"import _objectSpread from \"/home/yacine/Pro/alpha/AcuerApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/* global document */\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useRef, useContext } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport { MapContext } from './map';\nimport { arePointsEqual } from '../utils/deep-equal';\nvar defaultProps = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n/* eslint-disable complexity,max-statements */\n\nfunction Marker(props) {\n  var _useContext = useContext(MapContext),\n      map = _useContext.map,\n      mapLib = _useContext.mapLib;\n\n  var thisRef = useRef({\n    props: props\n  });\n  thisRef.current.props = props;\n  var marker = useMemo(function () {\n    var hasChildren = false;\n    React.Children.forEach(props.children, function (el) {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n\n    var options = _objectSpread({}, props, {\n      element: hasChildren ? document.createElement('div') : null\n    });\n\n    var mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n    mk.getElement().addEventListener('click', function (e) {\n      var _a, _b;\n\n      (_b = (_a = thisRef.current.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n    mk.on('dragstart', function (e) {\n      var _a, _b;\n\n      var evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    mk.on('drag', function (e) {\n      var _a, _b;\n\n      var evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDrag) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    mk.on('dragend', function (e) {\n      var _a, _b;\n\n      var evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    return mk;\n  }, []);\n  useEffect(function () {\n    marker.addTo(map.getMap());\n    return function () {\n      marker.remove();\n    };\n  }, []);\n  useEffect(function () {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps; // @ts-ignore\n\nexport default React.memo(Marker);","map":null,"metadata":{},"sourceType":"module"}